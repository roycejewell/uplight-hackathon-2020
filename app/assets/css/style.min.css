/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2020. MIT licensed.
 */
/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}*,html{box-sizing:border-box}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:Mark W01 Bold;src:url(/assets/fonts/Mark/5423411/8706c0b6-b423-44f7-ae1a-dd0aabd8a542.eot?#iefix);src:url(/assets/fonts/Mark/5423411/8706c0b6-b423-44f7-ae1a-dd0aabd8a542.eot?#iefix) format("eot"),url(/assets/fonts/Mark/5423411/41c8162d-c2a6-49b0-8139-8bebab187588.woff2) format("woff2"),url(/assets/fonts/Mark/5423411/4fe94f2e-7892-4785-9663-0350a7adf8c0.woff) format("woff"),url(/assets/fonts/Mark/5423411/3a7daddb-0a78-4734-a699-6fe08d0e8b99.ttf) format("truetype")}@font-face{font-family:Mark W01 Medium;src:url(/assets/fonts/Mark/5423451/36390511-9c88-42f2-890f-1ae4b1e7dd70.eot?#iefix);src:url(/assets/fonts/Mark/5423451/36390511-9c88-42f2-890f-1ae4b1e7dd70.eot?#iefix) format("eot"),url(/assets/fonts/Mark/5423451/72d3aeb4-7402-40d6-a945-34360316b980.woff2) format("woff2"),url(/assets/fonts/Mark/5423451/f17f16a9-09cc-4170-a039-5f47a4948438.woff) format("woff"),url(/assets/fonts/Mark/5423451/340db581-50b2-4783-8f40-db42ea764bda.ttf) format("truetype")}@font-face{font-family:Mark W01 Book;src:url(/assets/fonts/Mark/5423523/3805eba7-24c2-41ba-91d2-8fa5db02bc00.eot?#iefix);src:url(/assets/fonts/Mark/5423523/3805eba7-24c2-41ba-91d2-8fa5db02bc00.eot?#iefix) format("eot"),url(/assets/fonts/Mark/5423523/e6beefbb-4014-4efa-961b-7762af9aefef.woff2) format("woff2"),url(/assets/fonts/Mark/5423523/5b4bd9d6-75be-4d76-8292-7f6434b9e997.woff) format("woff"),url(/assets/fonts/Mark/5423523/d049afa3-baf5-4612-abf2-852763051b9c.ttf) format("truetype")}@font-face{font-family:Mark W01 Light;src:url(/assets/fonts/Mark/5423562/a8abc20c-6ce3-48be-b25e-41ae3c6e0379.eot?#iefix);src:url(/assets/fonts/Mark/5423562/a8abc20c-6ce3-48be-b25e-41ae3c6e0379.eot?#iefix) format("eot"),url(/assets/fonts/Mark/5423562/3d82d7a7-de70-4f67-85f4-78342de5fedb.woff2) format("woff2"),url(/assets/fonts/Mark/5423562/23acf083-b36e-4baf-aabc-4935a5c4bdce.woff) format("woff"),url(/assets/fonts/Mark/5423562/caf2b644-efc2-495e-af03-3b385d7de014.ttf) format("truetype")}html{font-family:Mark W01 Book}.primary-btn,a.primary-btn,button.primary-btn,input.primary-btn{display:inline-block;padding:9px 24px 13px;font-family:Mark W01 Medium;font-size:16px;line-height:20px;border-radius:100px;transition:background-color .3s,color .3s;margin-top:35px}.primary-btn:hover,a.primary-btn:hover,button.primary-btn:hover,input.primary-btn:hover{color:#00e297!important;background-color:#fff!important;box-shadow:0 6px 10px rgba(0,0,0,.15)}.primary-btn.green{background:#00e297;color:#0047ff}.primary-btn.green:hover{color:#00e297!important;background-color:#fff!important;box-shadow:0 6px 10px rgba(0,0,0,.15)}.primary-btn.blue{background:#0047ff;color:#00e297}.primary-btn.blue:hover{color:#00e297!important;background-color:#fff!important;box-shadow:0 6px 10px rgba(0,0,0,.15)}.platform{margin-top:60px;background-color:#fff}@media (min-width:37.5em){.platform{margin-top:70px}}@media (min-width:60em){.platform{margin-top:80px}}@media (min-width:120em){.platform{margin-top:110px}}.platform__hero{background-color:#003cff;padding:40px;position:relative;overflow:hidden}@media (min-width:60em){.platform__hero{padding:110px 40px 120px}}@media (min-width:80em){.platform__hero{padding:200px 40px 140px}}.platform__hero-content{position:relative;max-width:1100px;margin:auto}.platform__hero-line{height:4px;width:0;background-color:#fff;border-radius:20px;animation:b .4s cubic-bezier(.215,.61,.355,1) 1.6s forwards}.platform__hero-arrow{text-align:center;opacity:0;cursor:pointer;animation:a 1s cubic-bezier(.215,.61,.355,1) 2s forwards}.platform__hero-header{animation:f 1.1s cubic-bezier(.215,.61,.355,1) 1.85s forwards;opacity:0;color:#fff;font-family:Mark W01 Medium!important;font-size:21px!important;line-height:140%!important;font-weight:200!important;padding:0;margin:0 0 150px}.platform__hero-header strong{color:#01e297;font-weight:600!important}.platform__hero-header *{margin:0;padding:0}@media (min-width:60em){.platform__hero-header{font-family:Mark W01 Light!important;font-size:60px!important;line-height:110%!important;font-weight:200!important}}.platform__hero-sub-header{font-family:Mark W01 Medium;font-size:36px;line-height:1.3;color:#00e297;animation:f .8s cubic-bezier(.215,.61,.355,1) 1.7s forwards;opacity:0;padding:0;margin:30px 0 15px}.platform__hero-line-cover{position:absolute;top:0;height:100%;left:0;right:0;background-color:#003cff;animation:e .6s cubic-bezier(.215,.61,.355,1) .3s forwards;z-index:1}.platform__hero-line-1{animation:c 1s cubic-bezier(.215,.61,.355,1) 1.2s forwards}.platform__hero-line-1,.platform__hero-line-2{position:absolute;display:block;height:1px;bottom:35%;width:200vw;left:-75%;background-color:hsla(0,0%,100%,.5);transform:rotate(-35deg)}.platform__hero-line-2{animation:d 1s cubic-bezier(.215,.61,.355,1) 1.2s forwards}@keyframes a{0%{opacity:0;transform:translateY(-15px)}to{opacity:1;transform:translateY(0)}}@keyframes b{0%{width:0}to{width:30px}}@keyframes c{0%{transform:rotate(-35deg)}to{transform:rotate(-51deg)}}@keyframes d{0%{transform:rotate(-35deg)}to{transform:rotate(-16deg)}}@keyframes e{0%{height:100%}to{height:0}}@keyframes f{0%{transform:translateY(10px);opacity:0}to{transform:translateY(0);opacity:1}}.platform__card-bg{background-color:#ededed;padding:150px 0;background-position:50%;background-repeat:no-repeat;background-size:cover}@media (min-width:60em){.platform__card-bg{padding:150px 40px}}.platform__card{max-width:1100px;margin:0 0 150px;border-radius:4px;position:relative;display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;-ms-flex-align:center;align-items:center}.platform__card.left{margin:0}@media (min-width:60em){.platform__card{margin:0 auto;display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}.platform__card.left{margin:150px auto 0;-ms-flex-direction:row-reverse;flex-direction:row-reverse}}.platform__card-illustration{width:375px;max-width:70%;margin:50px 0;opacity:0;transform:translateY(20px)}@media (min-width:60em){.platform__card-illustration{width:325px;max-width:325px;margin-left:50px;margin-right:50px}}@media (min-width:60em) and (min-width:80em){.platform__card-illustration{margin-left:90px;margin-right:90px}}@media (min-width:80em){.platform__card-illustration{width:375px;max-width:375px}}.inView .platform__card-illustration{transition:all .8s ease .75s;opacity:1;transform:translateY(0)}@keyframes g{0%{transform:translateY(75px)}to{transform:translateY(0)}}@keyframes h{0%{opacity:0;transform:translateY(15px)}to{opacity:1;transform:translateY(0)}}.platform__card-content{background-color:#fff;padding:30px;max-width:100%;width:100%;margin-top:-75px;transform:translateY(75px)}@media (min-width:60em){.platform__card-content{max-width:478px;padding:50px;margin-top:-75px;margin-bottom:75px;margin-right:55px}.left .platform__card-content{margin-left:55px;margin-right:0}}@media (min-width:80em){.platform__card-content{padding:70px 75px}}.inView .platform__card-content{animation:g .9s cubic-bezier(.215,.61,.355,1) .2s forwards}.soc .platform__card-content{box-shadow:0 4px 32px rgba(0,0,0,.25)}.platform__card-label{font-size:16px;line-height:1.3;font-family:Mark W01 Medium;text-transform:uppercase;opacity:0;margin:0}.inView .platform__card-label{animation:h .6s cubic-bezier(.215,.61,.355,1) .45s forwards}.platform__card-title{font-family:Mark W01 Medium;font-weight:500;font-size:36px;line-height:1.3;opacity:0;margin:10px 0 15px}.inView .platform__card-title{animation:h .6s cubic-bezier(.215,.61,.355,1) .55s forwards}.platform__card-body>*{font-family:Mark W01 Book;font-size:18px!important;line-height:24px;opacity:0;margin:0}.inView .platform__card-body>*{animation:h .75s cubic-bezier(.215,.61,.355,1) .7s forwards}.platform__partners{background-color:#00e297;padding:50px 40px}@media (min-width:60em){.platform__partners{padding:100px 40px}}.platform__partners-content{background-color:#fff;padding:90px 50px 70px;border-radius:4px;max-width:1100px;margin:auto}.platform__partners-inner{max-width:700px;margin:auto}.platform__partners-title{font-family:Mark W01 Medium;font-weight:500;font-size:36px;line-height:1.3;color:#0047ff;opacity:0}.inView .platform__partners-title{animation:h .6s cubic-bezier(.215,.61,.355,1) .45s forwards}.platform__partners-body{max-width:600px;opacity:0}.inView .platform__partners-body{animation:h .6s cubic-bezier(.215,.61,.355,1) .55s forwards}.platform__partners-body>*{font-family:Mark W01 Book;font-size:18px!important;line-height:24px}.platform__partners-list{height:315px;opacity:0}.inView .platform__partners-list{animation:h .75s cubic-bezier(.215,.61,.355,1) .7s forwards}.platform__partners-list .glider-track{height:100%;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-direction:column;flex-direction:column}.platform__partners-list-item{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;-ms-flex-preferred-size:50%;flex-basis:50%;margin:auto}@media (min-width:60em){.platform__partners-list-item{-ms-flex-preferred-size:25%;flex-basis:25%}}.platform__partners-logo{-ms-flex-preferred-size:50%;flex-basis:50%}.platform .dots .glider-dot{background-color:#ccffd5;outline:none}.platform .dots .glider-dot.active{background-color:#0047ff;outline:none}.platform .glider-next,.platform .glider-prev{display:none}.platform__case-study{background-color:#fff;position:relative}@media (min-width:60em){.platform__case-study{height:415px}}.platform__case-study-image-container{display:none;opacity:0}@media (min-width:60em){.platform__case-study-image-container{display:block;position:absolute;top:0;left:0;right:60vw;bottom:0;background-position:100% 0;background-repeat:no-repeat;background-size:cover}}.inView .platform__case-study-image-container{transition:all .8s ease .75s;opacity:1}.platform__case-study-quote-container{padding:50px 60px 65px;position:relative}@media (min-width:60em){.platform__case-study-quote-container{padding:0;height:415px;display:-ms-flexbox;display:flex;max-width:1100px;-ms-flex-pack:end;justify-content:flex-end;margin:auto}}@media (min-width:60em){.platform__case-study-quote-container-inner{position:relative;-ms-flex-preferred-size:55%;flex-basis:55%;-ms-flex-item-align:center;-ms-grid-row-align:center;align-self:center;padding-right:40px}}@media (min-width:80em){.platform__case-study-quote-container-inner{padding-right:0}}.platform__case-study-title{font-family:Mark W01 Bold;font-weight:500;line-height:140%;margin:30px 0 20px;padding:0;font-size:21px;opacity:0}.inView .platform__case-study-title{animation:h .6s cubic-bezier(.215,.61,.355,1) .45s forwards}.platform__case-study-body{font-family:Mark W01 Book;font-size:18px!important;line-height:24px;opacity:0;margin-bottom:30px}.inView .platform__case-study-body{animation:h .6s cubic-bezier(.215,.61,.355,1) .55s forwards}.platform__case-study-cta{margin-top:0!important;opacity:0;padding:16px 24px 20px!important}.inView .platform__case-study-cta{animation:h .75s cubic-bezier(.215,.61,.355,1) .7s forwards}.platform__learn-more{background-color:#000f9f;background-position:bottom;background-repeat:no-repeat;background-size:cover}.platform__learn-more-content{max-width:1180px;padding:100px 40px;margin:auto}@media (min-width:60em){.platform__learn-more-content{padding:150px 40px}}.platform__learn-more-title{font-family:Mark W01 Medium;font-weight:500;font-size:36px;line-height:1.3;margin:0;padding:0;color:#fff;opacity:0}.inView .platform__learn-more-title{animation:h .6s cubic-bezier(.215,.61,.355,1) .45s forwards}.platform__learn-more-body{font-family:Mark W01 Bold;font-size:21px;line-height:1.3;color:#fff;padding:25px 0 40px;max-width:860px;opacity:0}.inView .platform__learn-more-body{animation:h .6s cubic-bezier(.215,.61,.355,1) .55s forwards}@media (min-width:60em){.platform__learn-more-body{font-family:Mark W01 Light;font-weight:350;font-size:36px;line-height:1.3}}.platform__learn-more-cta{opacity:0;padding:16px 24px 20px!important}.inView .platform__learn-more-cta{animation:h .75s cubic-bezier(.215,.61,.355,1) .7s forwards}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
